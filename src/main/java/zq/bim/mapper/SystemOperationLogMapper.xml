<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zq.bim.dao.SystemOperationLogDao">
  <resultMap id="BaseResultMap" type="zq.bim.entity.SystemOperationLog">
    <id column="log_id" jdbcType="BIGINT" property="logId" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="operation_user_id" jdbcType="BIGINT" property="operationUserId" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="operation_path" jdbcType="VARCHAR" property="operationPath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operation_address" jdbcType="VARCHAR" property="operationAddress" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zq.bim.entity.SystemOperationLogWithBLOBs">
    <result column="operation_content" jdbcType="LONGVARCHAR" property="operationContent" />
    <result column="operation_args" jdbcType="LONGVARCHAR" property="operationArgs" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, log_type, operation_user_id, operation_time, operation_path, create_time, 
    operation_address
  </sql>
  <sql id="Blob_Column_List">
    operation_content, operation_args
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_operation_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from system_operation_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="zq.bim.entity.SystemOperationLogWithBLOBs">
    insert into system_operation_log (log_id, log_type, operation_user_id, 
      operation_time, operation_path, create_time, 
      operation_address, operation_content, 
      operation_args)
    values (#{logId,jdbcType=BIGINT}, #{logType,jdbcType=VARCHAR}, #{operationUserId,jdbcType=BIGINT}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{operationPath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operationAddress,jdbcType=VARCHAR}, #{operationContent,jdbcType=LONGVARCHAR}, 
      #{operationArgs,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zq.bim.entity.SystemOperationLogWithBLOBs">
    insert into system_operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="operationUserId != null">
        operation_user_id,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="operationPath != null">
        operation_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operationAddress != null">
        operation_address,
      </if>
      <if test="operationContent != null">
        operation_content,
      </if>
      <if test="operationArgs != null">
        operation_args,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="operationUserId != null">
        #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationPath != null">
        #{operationPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationAddress != null">
        #{operationAddress,jdbcType=VARCHAR},
      </if>
      <if test="operationContent != null">
        #{operationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationArgs != null">
        #{operationArgs,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zq.bim.entity.SystemOperationLogWithBLOBs">
    update system_operation_log
    <set>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="operationUserId != null">
        operation_user_id = #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationPath != null">
        operation_path = #{operationPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationAddress != null">
        operation_address = #{operationAddress,jdbcType=VARCHAR},
      </if>
      <if test="operationContent != null">
        operation_content = #{operationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationArgs != null">
        operation_args = #{operationArgs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zq.bim.entity.SystemOperationLogWithBLOBs">
    update system_operation_log
    set log_type = #{logType,jdbcType=VARCHAR},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      operation_path = #{operationPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operation_address = #{operationAddress,jdbcType=VARCHAR},
      operation_content = #{operationContent,jdbcType=LONGVARCHAR},
      operation_args = #{operationArgs,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zq.bim.entity.SystemOperationLog">
    update system_operation_log
    set log_type = #{logType,jdbcType=VARCHAR},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      operation_path = #{operationPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operation_address = #{operationAddress,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>

  <!--=======================自定义方法======================-->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into system_operation_log (log_id, log_type,operation_user_id,operation_time,operation_path,operation_content,operation_args , operation_address ,create_time )
    values
    <foreach collection='contents' item='item' index='index' separator=','>
    (
      #{item.logId}, #{item.logType}, #{item.operationUserId}, #{item.operationTime} ,
      #{item.operationPath}, #{item.operationContent}, #{item.operationArgs}, #{item.operationAddress}, #{item.createTime}
    )
    </foreach>
  </insert>
</mapper>